{"version":3,"file":"static/js/916.f104d42d.chunk.js","mappings":"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","sources":["views/pages/login/Login.js","../node_modules/@coreui/icons/src/free/cil-user.ts"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n  CToast,\n  CToastBody,\n  CToastHeader,\n  CToaster,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport { cilLockLocked, cilUser } from \"@coreui/icons\";\nimport { useMutation } from \"react-query\";\nimport { generalPermissions, loginPost } from \"src/hooks/useAuth\";\nimport { useLoader } from \"src/global-context/LoaderContext\";\nimport GlobalLoader from \"src/components/global-loader/GlobalLoader\";\nimport logo from \"./../../../assets/images/avatars/Logo-removebg-preview.png\";\nimport Organization from \"../admin/organization/Organization\";\nconst Login = () => {\n  const { mutate: login } = useMutation(loginPost);\n  const { mutate: permissions } = useMutation(generalPermissions);\n  const navigate = useNavigate();\n  const [payload, setPayload] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const [toast, addToast] = useState(0);\n  const toaster = useRef();\n  const { isLoading, dispatch } = useLoader();\n  const showLoader = () => dispatch({ type: \"SHOW_LOADER\" });\n  const hideLoader = () => dispatch({ type: \"HIDE_LOADER\" });\n  const handleKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      loginHandler();\n    }\n  };\n  function loginHandler() {\n    showLoader();\n    login(payload, {\n      onSuccess: (data) => {\n        localStorage.setItem(\"token\", data.accessToken);\n        localStorage.setItem(\"email\", data.email);\n        localStorage.setItem(\"organizationName\",data.organizationName)\n        localStorage.setItem(\"organizationLogo\",data.organizationLogo)\n        localStorage.setItem(\"organizationid\",data.organizatoinId)\n\n\n        permissions(data.accessToken, {\n          onSuccess: (data) => {\n            localStorage.setItem(\n              \"permissions\",\n              JSON.stringify(data.permissions)\n            );\n            navigate(\"/dashboard\");\n            hideLoader();\n          },\n          onError: (error) => {\n            console.log(error);\n          },\n        });\n        // localStorage.setItem('roles', data?.roles[0])\n      },\n      onError: (error) => {\n        hideLoader();\n        addToast(exampleToast);\n      },\n    });\n  }\n  const exampleToast = (\n    <CToast>\n      <CToastHeader closeButton>\n        <svg\n          className=\"rounded me-2\"\n          width=\"20\"\n          height=\"20\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          preserveAspectRatio=\"xMidYMid slice\"\n          focusable=\"false\"\n          role=\"img\"\n        >\n          <rect width=\"100%\" height=\"100%\" fill=\"#FF0000\"></rect>\n        </svg>\n        <div className=\"fw-bold me-auto\">Error</div>\n        <small>Just now</small>\n      </CToastHeader>\n      <CToastBody>Wrong Email or Password</CToastBody>\n    </CToast>\n  );\n  return (\n    <>\n      <CToaster ref={toaster} push={toast} placement=\"top-end\" />\n      {isLoading ? (\n        <GlobalLoader />\n      ) : (\n        <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n          <CContainer>\n            <CRow className=\"justify-content-center\">\n              <CCol md={8}>\n                <CCardGroup>\n                  <CCard className=\"p-4\">\n                    <CCardBody>\n                      <CForm>\n                        <h1>Login</h1>\n                        <p className=\"text-medium-emphasis\">\n                          Sign In to your account\n                        </p>\n                        <CInputGroup className=\"mb-3\">\n                          <CInputGroupText>\n                            <CIcon icon={cilUser} />\n                          </CInputGroupText>\n                          <CFormInput\n                            placeholder=\"Username\"\n                            autoComplete=\"username\"\n                            onChange={(event) => {\n                              // eslint-disable-next-line no-restricted-globals\n                              setPayload({\n                                ...payload,\n                                email: event.target.value,\n                              });\n                            }}\n                            onKeyPress={handleKeyPress}\n                          />\n                        </CInputGroup>\n                        <CInputGroup className=\"mb-4\">\n                          <CInputGroupText>\n                            <CIcon icon={cilLockLocked} />\n                          </CInputGroupText>\n                          <CFormInput\n                            type=\"password\"\n                            placeholder=\"Password\"\n                            autoComplete=\"current-password\"\n                            onChange={(event) => {\n                              // eslint-disable-next-line no-restricted-globals\n                              setPayload({\n                                ...payload,\n                                password: event.target.value,\n                              });\n                            }}\n                            onKeyPress={handleKeyPress}\n                          />\n                        </CInputGroup>\n                        <CRow>\n                          <CCol xs={6}>\n                            <CButton\n                              onClick={loginHandler}\n                              color=\"primary\"\n                              className=\"px-4\"\n                            >\n                              Login\n                            </CButton>\n                          </CCol>\n                          <CCol xs={6} className=\"text-right\">\n                            <CButton\n                              color=\"link\"\n                              className=\"px-0\"\n                              onClick={() => {\n                                navigate(\"/reset-password\");\n                              }}\n                            >\n                              Forgot password?\n                            </CButton>\n                          </CCol>\n                        </CRow>\n                      </CForm>\n                    </CCardBody>\n                  </CCard>\n                  <CCard\n                    className=\"text-white  py-5\"\n                    style={{ width: \"%\", backgroundColor: \"#4f46e5\" }}\n                  >\n                    <CCardBody className=\"text-center flex align-items-center\">\n                      <div className=\"px-5\">\n                        <h1 style={{ color: \"#ffff\" }}>Welcome to right IOT</h1>\n                        {/* <h2>Sign up</h2>\n                        <p>\n                          Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\n                          tempor incididunt ut labore et dolore magna aliqua.\n                        </p>\n                        <Link to=\"/register\">\n                          <CButton color=\"primary\" className=\"mt-3\" active tabIndex={-1}>\n                            Register Now!\n                          </CButton>\n                        </Link> */}\n                      </div>\n                      <div className=\"\">\n                        <img\n                          src={logo}\n                          alt=\"Logo\"\n                          style={{\n                            width: \"105px\",\n                            height: \"62px\",\n                            backgroundColor: \"transparent\",\n                          }}\n                        />\n                      </div>\n                    </CCardBody>\n                  </CCard>\n                </CCardGroup>\n              </CCol>\n            </CRow>\n          </CContainer>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Login;\n","export var cilUser = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M411.6,343.656l-72.823-47.334,27.455-50.334A80.23,80.23,0,0,0,376,207.681V128a112,112,0,0,0-224,0v79.681a80.236,80.236,0,0,0,9.768,38.308l27.455,50.333L116.4,343.656A79.725,79.725,0,0,0,80,410.732V496H448V410.732A79.727,79.727,0,0,0,411.6,343.656ZM416,464H112V410.732a47.836,47.836,0,0,1,21.841-40.246l97.66-63.479-41.64-76.341A48.146,48.146,0,0,1,184,207.681V128a80,80,0,0,1,160,0v79.681a48.146,48.146,0,0,1-5.861,22.985L296.5,307.007l97.662,63.479h0A47.836,47.836,0,0,1,416,410.732Z' class='ci-primary'/>\"];\n"],"names":["login","useMutation","loginPost","mutate","permissions","generalPermissions","navigate","useNavigate","_useState","useState","email","password","_useState2","_slicedToArray","payload","setPayload","_useState3","_useState4","toast","addToast","toaster","useRef","_useLoader","useLoader","isLoading","dispatch","hideLoader","type","handleKeyPress","e","key","loginHandler","onSuccess","data","localStorage","setItem","accessToken","organizationName","organizationLogo","organizatoinId","JSON","stringify","onError","error","console","log","exampleToast","_jsxs","CToast","children","CToastHeader","closeButton","_jsx","className","width","height","xmlns","preserveAspectRatio","focusable","role","fill","CToastBody","_Fragment","CToaster","ref","push","placement","GlobalLoader","CContainer","CRow","CCol","md","CCardGroup","CCard","CCardBody","CForm","CInputGroup","CInputGroupText","CIcon","icon","cilUser","CFormInput","placeholder","autoComplete","onChange","event","_objectSpread","target","value","onKeyPress","cilLockLocked","xs","CButton","onClick","color","style","backgroundColor","src","logo","alt"],"sourceRoot":""}