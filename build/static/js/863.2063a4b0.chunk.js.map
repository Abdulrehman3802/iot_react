{"version":3,"file":"static/js/863.2063a4b0.chunk.js","mappings":"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","sources":["../node_modules/@coreui/icons/src/free/cil-bell.ts","views/thresholdtable/AlramThresholdTable.js","views/pages/alarm-threshold/Alram-threshold.js"],"sourcesContent":["export var cilBell = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M450.27,348.569,406.6,267.945V184c0-83.813-68.187-152-152-152s-152,68.187-152,152v83.945L58.928,348.568A24,24,0,0,0,80.031,384h86.935c-.238,2.636-.367,5.3-.367,8a88,88,0,0,0,176,0c0-2.7-.129-5.364-.367-8h86.935a24,24,0,0,0,21.1-35.431ZM310.6,392a56,56,0,1,1-111.419-8H310.018A56.14,56.14,0,0,1,310.6,392ZM93.462,352,134.6,276.055V184a120,120,0,0,1,240,0v92.055L415.736,352Z' class='ci-primary'/>\"];\n","import React from 'react'\nimport './AlarmThresholdTable.css'\nimport {\n  CTable,\n  CTableBody,\n  CTableRow,\n  CTableHead,\n  CTableHeaderCell,\n  CTableDataCell,\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CFormInput,\n  CFormCheck,\n  CFormSelect,\n} from '@coreui/react'\nconst AlramThresholdTable = () => {\n  const label = {\n    'background-color': '#4F46E5',\n    color: '#ffffff',\n    'border-radius': '4px',\n    padding: '5px',\n    width: '120px',\n  }\n  const option = {\n    'background-color': 'white',\n    color: 'black',\n  }\n  return (\n    <>\n      <div>\n        <CTable bordered responsive style={{ marginTop: '10px', width: '120px' }}>\n          <CTableHead>\n            <CTableRow>\n              <CTableHeaderCell scope=\"col\" colSpan={3} style={{ fontFamily: 'sans-serif' }}>\n                Sensor\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\" style={{ fontFamily: 'sans-serif' }}>\n                Unit\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">\n                <span style={{ fontFamily: 'sans-serif', marginLeft: '8px' }}>Enable </span>\n                <CFormCheck id=\"flexCheckChecked\" style={{ marginLeft: '6px' }} defaultChecked />\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\" style={{ fontFamily: 'sans-serif' }}>\n                Delay (Mins)\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\" style={{ fontFamily: 'sans-serif' }}>\n                Day Min\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\" style={{ fontFamily: 'sans-serif' }}>\n                Day Max\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\" style={{ fontFamily: 'sans-serif' }}>\n                Night Min\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\" style={{ fontFamily: 'sans-serif' }}>\n                Night Max\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\" style={{ fontFamily: 'sans-serif' }}>\n                Warning %\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\" style={{ fontFamily: 'sans-serif' }}>\n                <span style={{ marginLeft: '8px' }}>Healthy State </span>\n                <CFormCheck id=\"flexCheckChecked\" />\n              </CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\" style={{ fontFamily: 'sans-serif' }}>\n                offline Alert\n              </CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            <CTableRow>\n              <CTableHeaderCell scope=\"row\" colSpan={3} style={{ fontFamily: 'sans-serif' }}>\n                Medication Cheecked 056754277383\n              </CTableHeaderCell>\n              <CTableDataCell style={{ fontFamily: 'sans-serif' }}>C*</CTableDataCell>\n              <CTableDataCell>\n                <CFormCheck id=\"flexCheckChecked\" defaultChecked />\n              </CTableDataCell>\n              <CTableDataCell style={{ fontFamily: 'sans-serif' }}>\n                <CFormInput\n                  style={{ width: '150px' }}\n                  type=\"input\"\n                  id=\"exampleColorInput\"\n                  defaultValue=\"10\"\n                />\n              </CTableDataCell>\n              <CTableDataCell style={{ fontFamily: 'sans-serif' }}>\n                <CFormInput\n                  style={{ width: '150px' }}\n                  type=\"input\"\n                  id=\"exampleColorInput\"\n                  defaultValue=\"10\"\n                />\n              </CTableDataCell>\n              <CTableDataCell style={{ fontFamily: 'sans-serif' }}>\n                <CFormInput\n                  style={{ width: '150px' }}\n                  type=\"input\"\n                  id=\"exampleColorInput\"\n                  defaultValue=\"10\"\n                />\n              </CTableDataCell>\n              <CTableDataCell style={{ fontFamily: 'sans-serif' }}>\n                <CFormInput\n                  style={{ width: '150px' }}\n                  type=\"input\"\n                  id=\"exampleColorInput\"\n                  defaultValue=\"10\"\n                />\n              </CTableDataCell>\n              <CTableDataCell style={{ fontFamily: 'sans-serif' }}>\n                <CFormInput\n                  style={{ width: '150px' }}\n                  type=\"input\"\n                  id=\"exampleColorInput\"\n                  defaultValue=\"10\"\n                />\n              </CTableDataCell>\n              <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                <CTableDataCell style={{ fontFamily: 'sans-serif' }}>\n                  <CFormInput\n                    style={{ width: '150px' }}\n                    type=\"input\"\n                    id=\"exampleColorInput\"\n                    defaultValue=\"10\"\n                  />\n                  ?\n                </CTableDataCell>{' '}\n              </div>\n              <CTableDataCell>\n                <CFormCheck id=\"flexCheckChecked\" />\n              </CTableDataCell>\n              <CTableDataCell>\n                <CFormSelect style={label}>\n                  <option>Off</option>\n                  <option value=\"1\" style={option}>\n                    ON\n                  </option>\n                  <option value=\"2\" style={option}>\n                    Neither\n                  </option>\n                  <option value=\"3\" style={option}>\n                    OK\n                  </option>\n                </CFormSelect>\n              </CTableDataCell>\n            </CTableRow>\n          </CTableBody>\n        </CTable>\n      </div>\n    </>\n  )\n}\n\nexport default AlramThresholdTable\n","import React, { useRef, useState, useEffect } from 'react'\nimport {\n  CButton,\n  CCard,\n  CAccordion,\n  CAccordionBody,\n  CAccordionItem,\n  CAccordionHeader,\n  CTable,\n  CTableBody,\n  CTableRow,\n  CTableHead,\n  CTableHeaderCell,\n  CTableDataCell,\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CButtonGroup,\n  CCol,\n  CForm,\n  CFormInput,\n  CFormCheck,\n  CFormLabel,\n  CFormSelect,\n  CInputGroup,\n  CInputGroupText,\n} from '@coreui/react'\nimport {\n  cilSortAscending,\n  cilBell,\n  cilEnvelopeOpen,\n  cilHeadphones,\n  cilBuilding,\n} from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked, cilUser } from '@coreui/icons'\nimport GlobalLoader from 'src/components/global-loader/GlobalLoader'\nimport { GenericModal } from 'src/components/modal/GenericModal'\nimport { useLoader } from 'src/global-context/LoaderContext'\nimport { useMutation } from 'react-query'\nimport { useGlobalInfo } from 'src/global-context/GlobalContext'\nimport { useNavigate } from 'react-router-dom'\n// import NotificationAlarm from '../forms/Notification-alarm/NotificationAlarm'\n// import AlramThresholdTable from '../thresholdtable/AlramThresholdTable'\nimport AlramThresholdTable from 'src/views/thresholdtable/AlramThresholdTable'\nconst AlramThreshold = () => {\n  const { dispatch } = useLoader()\n  const showLoader = () => dispatch({ type: 'SHOW_LOADER' })\n  const hideLoader = () => dispatch({ type: 'HIDE_LOADER' })\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const [editData, setEditData] = useState()\n  const [isAddMode, setIsAddMode] = useState(false)\n  const { setShowToast } = useGlobalInfo()\n  const navigate = useNavigate()\n  const openModal = () => {\n    setIsModalOpen(true)\n  }\n  const closeModal = () => {\n    setIsModalOpen(false)\n  }\n  const { darkMode, setDarkMode } = useGlobalInfo()\n  const vars = {\n    '--cui-accordion-active-color': '#ffffff',\n    '--cui-accordion-active-bg': '#0F172A',\n  }\n  const label = {\n    'background-color': '#4F46E5',\n    color: '#ffffff',\n    'border-radius': '4px',\n    padding: '5px',\n    width: '120px',\n  }\n  const option = {\n    'background-color': 'white',\n    color: 'black',\n  }\n\n  return (\n    <>\n      <h3>\n        <CIcon icon={cilBell} size=\"xxl\" />\n        Alarm Threshold\n      </h3>\n      <div\n        style={{\n          display: 'flex',\n          alignItems: 'flex-start',\n          justifyContent: 'space-between',\n          flexWrap: 'wrap',\n        }}\n      >\n        <CAccordion class=\"accordion\" style={{ width: '45%' }}>\n          {/* Accordion Item 1 */}\n          <CAccordionItem itemKey={1}>\n            <CAccordionHeader style={vars}>\n              <h5 style={{ fontFamily: 'sans-serif', fontSize: '20px' }}>Alram Period</h5>\n            </CAccordionHeader>\n            <CAccordionBody>\n              <h1>Hello I am the time picker</h1>\n            </CAccordionBody>\n          </CAccordionItem>\n        </CAccordion>\n        <CAccordion class=\"accordion\" style={{ width: '45%' }}>\n          <CAccordionItem itemKey={2}>\n            <CAccordionHeader style={vars}>\n              <h5 style={{ fontFamily: 'sans-serif', fontSize: '20px' }}>System Office Delay</h5>\n            </CAccordionHeader>\n            <CAccordionBody style={{ fontFamily: 'sans-serif' }}>\n              The default office delay value, which can be inherited by the sensor on this system\n              <CFormSelect style={label}>\n                <option>2:00 hour</option>\n                <option value=\"1\" style={option}>\n                  5:00 hour\n                </option>\n                <option value=\"2\" style={option}>\n                  6:00 hour\n                </option>\n                <option value=\"3\" style={option}>\n                  7:00 hour\n                </option>\n              </CFormSelect>\n            </CAccordionBody>\n          </CAccordionItem>\n        </CAccordion>\n      </div>\n      <CAccordion alwaysOpen activeItemKey={2} style={{ marginTop: '10px' }}>\n        <CAccordionItem itemKey={1}>\n          <CAccordionHeader style={vars}>\n            <h5 style={{ fontFamily: 'sans-serif' }}>Condition based Alram</h5>\n          </CAccordionHeader>\n          <CAccordionBody>\n            <div\n              style={{\n                display: 'flex',\n                alignItems: 'flex-start',\n                justifyContent: 'space-between',\n                flexWrap: 'wrap',\n              }}\n            >\n              <CButtonGroup role=\"group\" aria-label=\"Default button group\">\n                <CButton color=\"primary\" variant=\"outline\">\n                  Copy\n                </CButton>\n                <CButton color=\"primary\" variant=\"outline\">\n                  Excel\n                </CButton>\n                <CButton color=\"primary\" variant=\"outline\">\n                  Pdf\n                </CButton>\n                <CButton color=\"primary\" variant=\"outline\">\n                  Print\n                </CButton>\n              </CButtonGroup>\n              <CForm className=\"row float-end\">\n                <CCol>\n                  <CFormLabel>\n                    Search:\n                    <CFormInput type=\"text\" id=\"inputtext\" />\n                  </CFormLabel>\n                </CCol>\n              </CForm>\n            </div>\n            <AlramThresholdTable />\n          </CAccordionBody>\n        </CAccordionItem>\n      </CAccordion>\n\n      <CAccordion alwaysOpen activeItemKey={2} style={{ marginTop: '10px' }}>\n        <CAccordionItem itemKey={1}>\n          <CAccordionHeader style={vars}>\n            <h5 style={{ fontFamily: 'sans-serif' }}>Status Based Alram</h5>\n          </CAccordionHeader>\n          <CAccordionBody>\n            <div\n              style={{\n                display: 'flex',\n                alignItems: 'flex-start',\n                justifyContent: 'space-between,',\n                flexWrap: 'wrap',\n              }}\n            >\n              <CButtonGroup role=\"group\" aria-label=\"Default button group\">\n                <CButton color=\"primary\" variant=\"outline\">\n                  Copy\n                </CButton>\n                <CButton color=\"primary\" variant=\"outline\">\n                  Excel\n                </CButton>\n                <CButton color=\"primary\" variant=\"outline\">\n                  Pdf\n                </CButton>\n                <CButton color=\"primary\" variant=\"outline\">\n                  Print\n                </CButton>\n              </CButtonGroup>\n              <CForm className=\"row float-end\">\n                <CCol>\n                  <CFormLabel>\n                    Search:\n                    <CFormInput type=\"text\" id=\"inputtext\" />\n                  </CFormLabel>\n                </CCol>\n              </CForm>\n            </div>\n            <AlramThresholdTable />\n          </CAccordionBody>\n        </CAccordionItem>\n      </CAccordion>\n    </>\n  )\n}\n\nexport default AlramThreshold\n"],"names":["cilBell","option","color","_jsx","_Fragment","children","_jsxs","CTable","bordered","responsive","style","marginTop","width","CTableHead","CTableRow","CTableHeaderCell","scope","colSpan","fontFamily","marginLeft","CFormCheck","id","defaultChecked","CTableBody","CTableDataCell","CFormInput","type","defaultValue","display","alignItems","justifyContent","CFormSelect","padding","value","useLoader","dispatch","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","_useState5","_useState6","_useGlobalInfo2","useGlobalInfo","setShowToast","useNavigate","vars","darkMode","setDarkMode","CIcon","icon","size","flexWrap","CAccordion","class","CAccordionItem","itemKey","CAccordionHeader","fontSize","CAccordionBody","alwaysOpen","activeItemKey","CButtonGroup","role","CButton","variant","CForm","className","CCol","CFormLabel","AlramThresholdTable"],"sourceRoot":""}